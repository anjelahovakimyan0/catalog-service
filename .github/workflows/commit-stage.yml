name: Commit Stage
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: catalog-service
  VERSION: ${{ github.sha }}
  GITHUB_REPOSITORY: anjelahovakimyan0

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
      - name: Build with Gradle Wrapper
        run: |
          chmod +x gradlew
          ./gradlew build
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{ github.workspace }}"
          fail-build: false
          severity-cutoff: high
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
        continue-on-error: true
  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: [ build ]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Build container image
        run: |
          chmod +x gradlew
          ./gradlew bootBuildImage --no-build-cache
      - name: OCI image vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_NAME }}
          fail-build: false
          severity-cutoff: high
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
        continue-on-error: true
      - name: Install pack CLI
        run: |
    # Get the URL of the latest release
          DOWNLOAD_URL=$(curl -s https://api.github.com/repos/buildpacks/pack/releases/tags/v0.27.0 | jq -r '.assets[] | select(.name | test("linux.*.tgz")) | .browser_download_url')
    
    # Download the file
          curl -LO $DOWNLOAD_URL

    # Extract the downloaded file
          tar -xvzf pack-v0.27.0-linux.x86_64.tgz -C /usr/local/bin
      - name: Log into container registry & Publish container image
        run: |
          docker login ${{ env.REGISTRY }} -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          pack build ${{ env.IMAGE_NAME }} --path . --builder heroku/buildpacks:20
          docker tag ${{ env.IMAGE_NAME }} ${{ env.REGISTRY }}/${{ env.GITHUB_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          docker push ${{ env.REGISTRY }}/${{ env.GITHUB_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}